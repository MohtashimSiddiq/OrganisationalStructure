<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Ruag.Client" 
					xmlns:customControls="clr-namespace:Ruag.Client.Resources.CustomControls"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:cmd="http://www.galasoft.ch/mvvmlight"
					xmlns:converters="clr-namespace:Ruag.Client.Helpers.Converters"
					xmlns:templateSelectors="clr-namespace:Ruag.Client.Helpers.DataTemplateSelectors" 
					xmlns:userControls="clr-namespace:Ruag.Client.Resources.UserControls">

	<!-- Static brushes-->
	<SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
	<SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
	<SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
	<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
	<SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#444" />
	<SolidColorBrush x:Key="NormalBrush" Color="#888" />
	<SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
	<SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
	<SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
	<!--Combo box brushes -->
	<SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
	<SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
	<SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
	<SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
	<SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

	<LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="White" Offset="0.0" />
				<GradientStop Color="White" Offset="0.6" />
				<GradientStop Color="#DDDDDD" Offset="1.2"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#CCC" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#BBB" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="0.1"/>
				<GradientStop Color="#EEE" Offset="0.9"/>
				<GradientStop Color="#FFF" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<!--Converters-->
	<converters:StringToUriConverter x:Key="StringToUriConverter" />
	<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />


	<!--MultiSelect Combo box-->

	<ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
				<ColumnDefinition Width="24" />
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="3" Name="Border"
              BorderBrush="{DynamicResource brush_combo}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{DynamicResource brush_combo}" />
			<Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{DynamicResource brush_combo}" />
			
			<Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#fff"
            VerticalAlignment="Center" />
			<customControls:ImageButton Grid.Column="2" ImagePath="{DynamicResource imgRoleDelete}" HoverImagePath="{DynamicResource imgDeleteHover}" 
										ImageHeight="12" ImageWidth="12" PathHorizontalAlignment="Center"
										PathVerticalAlignment="Center">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<cmd:EventToCommand Command="{Binding RemoveCommand,
														RelativeSource={RelativeSource AncestorType=customControls:RoleSelector, Mode=FindAncestor}}" 
																		CommandParameter="{Binding CurrentItem}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</customControls:ImageButton>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Fill" TargetName="Arrow" Value="WhiteSmoke"/>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
				<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<Style x:Key="MultiSelectComboBox"  TargetType="{x:Type ComboBox}">
		<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="Black"/>
		<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>						
						<ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}" Width="Auto"/>
						
						<ContentPresenter Name="ContentSite" Margin="5, 3, 50, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
							<TextBox.Template>
								<ControlTemplate TargetType="TextBox" >
									<Border Name="PART_ContentHost" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<!-- Popup showing items -->
						<Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="DropDownBorder" Background="{DynamicResource brush_combo}" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{DynamicResource brush_combo}"/>
								<ScrollViewer Margin="4" SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!--Data templates-->
	<DataTemplate x:Key="TemplateSettings">
		<userControls:UC_Settings/>
	</DataTemplate>

	<DataTemplate x:Key="TemplateHome">
		<Grid Background="Transparent" >
			<Image Source="/Resources/Images/RaugLogo.png"  />
		</Grid>
	</DataTemplate>
	<DataTemplate x:Key="TemplateRoles">
		<userControls:UC_Roles/>
	</DataTemplate>
	<DataTemplate x:Key="TemplateEmployees">
		<userControls:UC_Employees/>
	</DataTemplate>

	
	
	<DataTemplate x:Key="MultiSelectItemsTemplate">
		<StackPanel Orientation="Horizontal" Margin=" 0 5 ">
			<ComboBox MinHeight="30" MaxHeight="30" MinWidth="40" SelectedItem="{Binding CurrentItem,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}" Style="{StaticResource MultiSelectComboBox}"  ItemsSource="{Binding Items}" DisplayMemberPath="Name" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged">
						<cmd:EventToCommand Command="{Binding SelectionChangedCommand,
														RelativeSource={RelativeSource AncestorType=customControls:RoleSelector, Mode=FindAncestor}}" 
												CommandParameter="{Binding CurrentItem}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</ComboBox>
			<Image Source="{DynamicResource imgRoleSeperator}" Visibility="{Binding CurrentItem.IsButton, Converter={StaticResource BoolToVisibilityConverter}}" Height="24" Width="24"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="MultiSelectButtonTemplate">
		<Button x:Name="btnAdd" >
			<Button.Template>
				<ControlTemplate>
					<Grid Margin="0">
						<Border MinWidth="40" MaxHeight="30" MinHeight="30" x:Name="btnBrdr" Background="{DynamicResource brush_buttonColor}" BorderThickness="0" Cursor="Hand" />
						<customControls:ImageButton ImagePath="{DynamicResource imgAddRole}"
													 HoverImagePath="{DynamicResource imgAddRole}"
												ImageHeight="16" ImageWidth="16"
												HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard  >
										<DoubleAnimation  Storyboard.TargetName="btnBrdr" Storyboard.TargetProperty="Opacity"  From="1"  To="0.5" Duration="0:0:0.100" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard  >
										<DoubleAnimation  Storyboard.TargetName="btnBrdr" Storyboard.TargetProperty="Opacity"  From="0.5"  To="1" Duration="0:0:0.100" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Button.Template>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Click">
					<cmd:EventToCommand Command="{Binding AddCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=customControls:RoleSelector}}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Button>
	</DataTemplate>

	<!--Template selectors-->
	<templateSelectors:MainContentSelector x:Key="MainContentSelector"  
										   SettingsTemplate="{StaticResource TemplateSettings}"
										   HomeTemplate="{StaticResource TemplateHome}"
										   RolesTemplate="{StaticResource TemplateRoles}" PersonTemplate="{StaticResource TemplateEmployees}"/>

	<templateSelectors:MultiSelectDataTemplateSelector x:Key="MultiSelectDataTemplateSelector"  
										  AddButtonTemplate ="{StaticResource MultiSelectButtonTemplate}"
										   ItemsTemplate="{StaticResource MultiSelectItemsTemplate}"
										  />
	
	<Style TargetType="{x:Type customControls:RoleSelector}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type customControls:RoleSelector}">
					<ItemsControl x:Name="itmsCtrl" ItemsSource="{Binding SelectionList, RelativeSource={RelativeSource Mode=TemplatedParent}}"
								  ItemTemplateSelector="{StaticResource MultiSelectDataTemplateSelector}">
						<ItemsControl.Template>
							<ControlTemplate>
								<WrapPanel IsItemsHost="True" Orientation="Horizontal">
									
								</WrapPanel>
							</ControlTemplate>
						</ItemsControl.Template>
					</ItemsControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type customControls:WatermarkTextBox}">
		<Setter Property="FontSize" Value="{DynamicResource fnt_txtBxContent}"/>
		<Setter Property="Foreground" Value="{DynamicResource brush_textColor}"/>
		<Setter Property="AcceptsReturn" Value="True" />
		<Setter Property="FontWeight" Value="ExtraLight" />
		<Setter Property="MaxLines" Value="{Binding Path=MaxLines,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type customControls:WatermarkTextBox}">

					<StackPanel>
						<TextBlock x:Name="txtHint" IsHitTestVisible="False" 
								   Foreground="{DynamicResource brush_textColor}"
								   Text="{Binding Watermark,RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="Auto"  VerticalAlignment="Bottom" 
								   FontSize="{DynamicResource fnt_txtBxTitle}"
							   HorizontalAlignment="Left" Margin="0,0,0,0"  RenderTransformOrigin="0,0" >
							<TextBlock.RenderTransform>
								<TransformGroup>
									<ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1" />
									<TranslateTransform x:Name="translate" X="1" Y="20" />
								</TransformGroup>
							</TextBlock.RenderTransform>
						</TextBlock>
						<ScrollViewer x:Name="PART_ContentHost"   VerticalScrollBarVisibility="Visible"/>

						<Rectangle Height="2" Fill="{DynamicResource brush_Secondary}" VerticalAlignment="Bottom" StrokeThickness="1"  />

					</StackPanel>

					<ControlTemplate.Triggers>
						<Trigger Property="RemoveWaterMark"   Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard  >
										<DoubleAnimation Storyboard.TargetName="scaleTransform"  Storyboard.TargetProperty="ScaleX"  From="1"  To="0.7" Duration="0:0:0.100" />
										<DoubleAnimation  Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY"  From="1"  To="0.7" Duration="0:0:0.100" />
										<DoubleAnimation  Storyboard.TargetName="translate" Storyboard.TargetProperty="Y"  From="20"  To="1" Duration="0:0:0.100" />
									</Storyboard>

								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard  >
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX"  From="0.7"  To="1" Duration="0:0:0.100" />
										<DoubleAnimation Storyboard.TargetName="scaleTransform"  Storyboard.TargetProperty="ScaleY"  From="0.7"  To="1" Duration="0:0:0.100" />
										<DoubleAnimation Storyboard.TargetName="translate"  Storyboard.TargetProperty="Y"  From="1"  To="20" Duration="0:0:0.100" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type customControls:ImageButton}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type customControls:ImageButton}">
					<Grid Name="gridMain" Background="{TemplateBinding Background}">
						<Image x:Name="img" Width="{Binding ImageWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}"
						   Height="{Binding ImageHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
						   Source="{Binding ImagePath, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource StringToUriConverter}}" 
							   HorizontalAlignment="{Binding PathHorizontalAlignment, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
							   VerticalAlignment="{Binding PathVerticalAlignment, RelativeSource={RelativeSource Mode=TemplatedParent}}"  />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Source" TargetName="img" 
									Value="{Binding HoverImagePath, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource StringToUriConverter}}" />
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type customControls:MenuRadioButton}">
		<Setter Property="Margin" Value="0 10 10 0" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type customControls:MenuRadioButton}">
					<StackPanel x:Name="stckPnl" Orientation="Vertical" Background="Transparent">
						<TextBlock x:Name="txtCntnt" Foreground="{TemplateBinding ForeColor}"  Text="{TemplateBinding Content}" />
						<Rectangle x:Name="rectSelected" HorizontalAlignment="Stretch" Stroke="{TemplateBinding ForeColor}" RenderTransformOrigin="0.5, 0.5">
							<Rectangle.RenderTransform>
								<ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1" />
							</Rectangle.RenderTransform>
						</Rectangle>
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="1" To="0" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="0" To="1" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>


						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" TargetName="txtCntnt" Value="{Binding Path=HoverColor,RelativeSource={RelativeSource Mode=TemplatedParent}}"></Setter>
							<Setter Property="Stroke" TargetName="rectSelected" Value="{Binding Path=HoverColor,RelativeSource={RelativeSource Mode=TemplatedParent}}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type customControls:ImageTextButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type customControls:ImageTextButton}">
					<Grid>
						<Border Name="btnBorder" Background="{DynamicResource brush_buttonColor}"/>
						<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Cursor="Hand">
							<Label Content="{TemplateBinding ButtonText}" FontSize="{DynamicResource fnt_btnContent}" Foreground="{DynamicResource brush_buttonTextColor}" />
							<Image Margin="5 0 5 0" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding ImagePath}" Width="12" Height="12" />
						</StackPanel>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="btnBorder" Value="{DynamicResource brush_buttonHoverColor}"/>
							<Setter Property="Margin" TargetName="btnBorder" Value="-2"/>

						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="DataGridColumnHeader">
		<Style.Setters>
			<Setter Property="SeparatorBrush" Value="#FFC9CACA"/>
			<Setter Property="Foreground" Value="{DynamicResource brush_dgHeaderTextColor}"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="FontSize" Value="{DynamicResource fnt_dgHeaderText}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="DataGridColumnHeader">
						<Grid Background="{DynamicResource brush_Primary}">
							<TextBlock Text="{Binding Path=Content,RelativeSource={RelativeSource Mode=TemplatedParent}}"
									   Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"
									   VerticalAlignment="Center" HorizontalAlignment="Center" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

	<Style TargetType="TabItem">
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate DataType="{x:Type TabItem}">
					<Border x:Name="grid" Background="Transparent">
						<ContentPresenter>
							<ContentPresenter.Content>
								<Image x:Name="img" Height="24" Width="24" Source="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource StringToUriConverter}}"  />
							</ContentPresenter.Content>
						</ContentPresenter>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabItem">
					<Border Name="Border" BorderThickness="0" BorderBrush="Transparent" Background="Transparent" Margin="2">
						<ContentPresenter x:Name="ContentSite"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										ContentSource="Header"
										Margin="10,2"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource brush_Primary}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter TargetName="Border" Property="Background" Value="Transparent" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Visibility" Value="Hidden"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Visibility" Value="Hidden"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Black" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="8,0,-2,0"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="0"/>
				<RowDefinition Height="0.00001*"/>
				<RowDefinition MaxHeight="0"/>
			</Grid.RowDefinitions>
			<Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
			<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
			<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="18"/>
				<ColumnDefinition Width="0.00001*"/>
				<ColumnDefinition MaxWidth="18"/>
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
			<RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
			<Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
		</Grid>
	</ControlTemplate>
	<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="Height" Value="18" />
				<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="18"/>
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ScrollContentPresenter Grid.Column="1"/>
						<ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
						<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	

	<!-- Flat ComboBox -->
	

	

	<Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
		<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="Black"/>
		<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

						<ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
							<TextBox.Template>
								<ControlTemplate TargetType="TextBox" >
									<Border Name="PART_ContentHost" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<!-- Popup showing items -->
						<Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
								<ScrollViewer Margin="4" SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	
</ResourceDictionary>